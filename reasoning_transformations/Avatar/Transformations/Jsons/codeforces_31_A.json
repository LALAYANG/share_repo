{"file_id": "codeforces_31_A", "source_file": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/Code//codeforces_31_A.py", "target_file": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_31_A.py", "evaluation_tests_dir": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/TestCases/", "single_rule": null, "genetic_algorithm": null, "patch_path": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_31_A.patch", "applicable_rules": ["change_var_names", "add_nested_for_out", "add_nested_if", "add_else_to_for", "add_nested_list", "transform_range_to_recursion", "add_decorator", "add_datetime", "add_time", "add_crypto", "add_sklearn", "add_http", "add_scipy", "add_base64", "add_dateutil"], "exception": null, "total_time": 15.429681, "test_results_before": ["tests_pass"], "test_results_after": ["tests_pass"], "diff_output": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_31_A.patch", "original_code": "y = int(input())\narr = [int(i) for i in input().split()]\nfor i in range(len(arr)):\n    for j in range(len(arr)):\n        if i == j:\n            continue\n        for k in range(len(arr)):\n            if arr[k] != arr[j] and arr[k] != arr[i] and (arr[k] == arr[i] + arr[j]):\n                print(k + 1, j + 1, i + 1)\n                exit()\nprint(-1)", "transformed_code": "from dateutil.parser import parse\nimport base64\nfrom scipy.stats import ttest_ind\nfrom http.client import HTTPConnection\nHTTPConnection('google.com', port=80)\nfrom sklearn.utils import shuffle\nfrom cryptography.fernet import Fernet\nimport time\nimport datetime\ntime.sleep(0.15)\n\ndef my_decorator(func):\n\n    def dec_result(*args, **kwargs):\n        res = func(*args, **kwargs)\n        return res\n    return dec_result\ny = int(input())\nbase64.b64encode(b'26839936405512757633')\ndatetime.datetime.now()\narr = [[int(i) for i in input().split()]][0]\nLoopChecker13 = 905\nLoopChecker23 = 904\nttest_ind([77, 60, 48], [8, 61, 91])\nFernet.generate_key()\nConditionChecker18 = 113\nConditionChecker28 = 112\nfor LoopIndexOut in range(LoopChecker13 // LoopChecker23):\n    for i in range(len(arr)):\n        for j in range(len(arr)):\n            if ConditionChecker18 & ConditionChecker28:\n                if i == j:\n                    continue\n\n            @my_decorator\n            def loop_13_12(newk_1, stop, step):\n                if step == 0 or (step > 0 and newk_1 >= stop) or (step < 0 and newk_1 <= stop):\n                    return\n                if arr[newk_1] != arr[j] and arr[newk_1] != arr[i] and (arr[newk_1] == arr[i] + arr[j]):\n                    print(newk_1 + 1, j + 1, i + 1)\n                    exit()\n                loop_13_12(newk_1 + step, stop, step)\n            loop_13_12(0, len(arr), 1)\nelse:\n    pass\nprint(-1)\nparse('2024-10-12 06:08:30')\nshuffle([18, 81, 68])"}