{"file_id": "codeforces_632_B", "source_file": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/Code//codeforces_632_B.py", "target_file": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_632_B.py", "evaluation_tests_dir": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/TestCases/", "single_rule": null, "genetic_algorithm": null, "patch_path": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_632_B.patch", "applicable_rules": ["change_var_names", "add_nested_for_out", "add_nested_if", "change_function_names", "add_try_except_inside_functions", "add_else_to_for", "add_nested_list", "transform_range_to_recursion", "add_decorator", "add_datetime", "add_time", "add_crypto", "add_sklearn", "add_http", "add_scipy", "add_base64", "add_dateutil"], "exception": null, "total_time": 8.275222, "test_results_before": ["tests_pass"], "test_results_after": ["tests_pass"], "diff_output": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_632_B.patch", "original_code": "def main():\n    input()\n    pieces = tuple(zip(map(int, input().split()), input()))\n    return Bob_sMaxStrength(pieces)\n\ndef Bob_sMaxStrength(pieces):\n    pScore = sScore = pMaxScore = sMaxScore = sum((piece[0] for piece in pieces if piece[1] == 'B'))\n    for piece in pieces:\n        if piece[1] == 'A':\n            pScore += piece[0]\n            if pScore > pMaxScore:\n                pMaxScore = pScore\n        else:\n            pScore -= piece[0]\n    for i in range(len(pieces) - 1, -1, -1):\n        if pieces[i][1] == 'A':\n            sScore += pieces[i][0]\n            if sScore > sMaxScore:\n                sMaxScore = sScore\n        else:\n            sScore -= pieces[i][0]\n    if pMaxScore > sMaxScore:\n        return pMaxScore\n    return sMaxScore\nif __name__ == '__main__':\n    print(main())", "transformed_code": "from dateutil.parser import parse\nimport base64\nfrom scipy.stats import ttest_ind\nfrom http.client import HTTPConnection\nfrom sklearn.utils import shuffle\nHTTPConnection('google.com', port=80)\nfrom cryptography.fernet import Fernet\nimport time\nimport datetime\ndatetime.datetime.now()\nparse('2024-10-12 06:31:43')\n\ndef my_decorator(func):\n\n    def dec_result(*args, **kwargs):\n        res = func(*args, **kwargs)\n        return res\n    return dec_result\n\n@my_decorator\ndef Func_main_0():\n    try:\n        input()\n        pieces = tuple(zip(map(int, input().split()), input()))\n        return Bob_sMaxStrength(pieces)\n    except:\n        pass\nshuffle([40, 85, 25])\n\ndef Bob_sMaxStrength(pieces):\n    ConditionChecker125 = [198][0]\n    ConditionChecker225 = 441\n    pScore = newsScore_1 = pMaxScore = sMaxScore = sum((piece[0] for piece in pieces if piece[1] == 'B'))\n    LoopChecker18 = 863\n    LoopChecker28 = 862\n\n    def loop_15_4(LoopIndexOut, stop, step):\n        nonlocal pScore, pMaxScore\n        if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):\n            return\n        for piece in pieces:\n            if piece[1] == 'A':\n                pScore += piece[0]\n                if pScore > pMaxScore:\n                    pMaxScore = pScore\n            else:\n                pScore -= piece[0]\n        loop_15_4(LoopIndexOut + step, stop, step)\n    loop_15_4(0, LoopChecker18 // LoopChecker28, 1)\n    for i in range(len(pieces) - 1, -1, -1):\n        if pieces[i][1] == 'A':\n            newsScore_1 += pieces[i][0]\n            if newsScore_1 > sMaxScore:\n                sMaxScore = newsScore_1\n        else:\n            newsScore_1 -= pieces[i][0]\n    if ConditionChecker125 & ConditionChecker225:\n        if pMaxScore > sMaxScore:\n            return pMaxScore\n    return sMaxScore\ntime.sleep(0.08)\nbase64.b64encode(b'62685735511041101691')\nFernet.generate_key()\nttest_ind([88, 41, 97], [93, 63, 20])\nif __name__ == '__main__':\n    print(Func_main_0())"}