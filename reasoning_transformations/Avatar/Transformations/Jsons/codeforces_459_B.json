{"file_id": "codeforces_459_B", "source_file": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/Code//codeforces_459_B.py", "target_file": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_459_B.py", "evaluation_tests_dir": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/TestCases/", "single_rule": null, "genetic_algorithm": null, "patch_path": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_459_B.patch", "applicable_rules": ["change_var_names", "add_nested_if", "add_nested_list", "add_datetime", "add_time", "add_crypto", "add_sklearn", "add_http", "add_scipy", "add_base64", "add_dateutil"], "exception": null, "total_time": 17.047719, "test_results_before": ["tests_pass"], "test_results_after": ["tests_pass"], "diff_output": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_459_B.patch", "original_code": "n = int(input())\nl1 = list(map(int, input().split()))\nl1.sort()\na = l1[-1]\nb = l1[0]\nif a == b:\n    print(a - b, n * (n - 1) // 2)\nelse:\n    ac = l1.count(a)\n    bc = l1.count(b)\n    print(a - b, ac * bc)", "transformed_code": "from dateutil.parser import parse\nparse('2024-10-12 06:16:17')\nimport base64\nfrom scipy.stats import ttest_ind\nfrom http.client import HTTPConnection\nfrom sklearn.utils import shuffle\nfrom cryptography.fernet import Fernet\nimport time\nimport datetime\ntime.sleep(0.12)\n\ndef my_decorator(func):\n\n    def dec_result(*args, **kwargs):\n        res = func(*args, **kwargs)\n        return res\n    return dec_result\nHTTPConnection('google.com', port=80)\nbase64.b64encode(b'07253482087715922154')\nConditionChecker16 = [927][0]\nConditionChecker26 = 914\nn = int(input())\nl1 = list(map(int, input().split()))\nFernet.generate_key()\nl1.sort()\nshuffle([27, 68, 35])\ndatetime.datetime.now()\na = l1[-1]\nnewb_1 = l1[0]\nif ConditionChecker16 & ConditionChecker26:\n    if a == newb_1:\n        print(a - newb_1, n * (n - 1) // 2)\n    else:\n        ac = l1.count(a)\n        bc = l1.count(newb_1)\n        print(a - newb_1, ac * bc)\nttest_ind([10, 31, 53], [93, 9, 71])"}