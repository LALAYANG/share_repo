{"file_id": "codeforces_567_A", "source_file": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/Code//codeforces_567_A.py", "target_file": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_567_A.py", "evaluation_tests_dir": "/home/yang/PLTranslationEmpirical/dataset/avatar/Python/TestCases/", "single_rule": null, "genetic_algorithm": null, "patch_path": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_567_A.patch", "applicable_rules": ["change_var_names", "add_nested_for_out", "add_nested_if", "add_else_to_for", "add_nested_list", "add_datetime", "add_time", "add_crypto", "add_sklearn", "add_http", "add_scipy", "add_base64", "add_dateutil"], "exception": null, "total_time": 17.040464, "test_results_before": ["tests_pass"], "test_results_after": ["tests_pass"], "diff_output": "reasoning_transformation/Avatar/17ab0b6d42ba9f8f99969f8919de6468f42d8543/Transformation/codeforces_567_A.patch", "original_code": "inp = int(input())\nlista = []\nlista = [int(x) for x in input().split()]\nfor i in range(len(lista)):\n    if i == 0:\n        print(f'{lista[i + 1] - lista[i]} {lista[len(lista) - 1] - lista[i]}')\n        continue\n    elif i == len(lista) - 1:\n        print(f'{lista[len(lista) - 1] - lista[len(lista) - 2]} {lista[len(lista) - 1] - lista[0]}')\n        continue\n    elif lista[i] - lista[i - 1] > lista[i + 1] - lista[i]:\n        print(lista[i + 1] - lista[i], end=' ')\n    else:\n        print(lista[i] - lista[i - 1], end=' ')\n    if lista[len(lista) - 1] - lista[i] > lista[i] - lista[0]:\n        print(lista[len(lista) - 1] - lista[i])\n    else:\n        print(lista[i] - lista[0])", "transformed_code": "from dateutil.parser import parse\nimport base64\nfrom scipy.stats import ttest_ind\nfrom http.client import HTTPConnection\nfrom sklearn.utils import shuffle\nbase64.b64encode(b'53021118609328653738')\nfrom cryptography.fernet import Fernet\nimport time\nttest_ind([25, 37, 7], [2, 85, 33])\nHTTPConnection('google.com', port=80)\nimport datetime\n\ndef my_decorator(func):\n\n    def dec_result(*args, **kwargs):\n        res = func(*args, **kwargs)\n        return res\n    return dec_result\ntime.sleep(0.12)\ninp = int(input())\nlista = [[]][0]\nFernet.generate_key()\nshuffle([33, 65, 46])\nlista = [int(x) for x in input().split()]\nparse('2024-10-12 06:23:02')\nLoopChecker14 = 176\nLoopChecker24 = 175\nConditionChecker18 = 541\ndatetime.datetime.now()\nConditionChecker28 = 460\nfor LoopIndexOut in range(LoopChecker14 // LoopChecker24):\n    for newi_1 in range(len(lista)):\n        if ConditionChecker18 & ConditionChecker28:\n            if newi_1 == 0:\n                print(f'{lista[newi_1 + 1] - lista[newi_1]} {lista[len(lista) - 1] - lista[newi_1]}')\n                continue\n            elif newi_1 == len(lista) - 1:\n                print(f'{lista[len(lista) - 1] - lista[len(lista) - 2]} {lista[len(lista) - 1] - lista[0]}')\n                continue\n            elif lista[newi_1] - lista[newi_1 - 1] > lista[newi_1 + 1] - lista[newi_1]:\n                print(lista[newi_1 + 1] - lista[newi_1], end=' ')\n            else:\n                print(lista[newi_1] - lista[newi_1 - 1], end=' ')\n        if lista[len(lista) - 1] - lista[newi_1] > lista[newi_1] - lista[0]:\n            print(lista[len(lista) - 1] - lista[newi_1])\n        else:\n            print(lista[newi_1] - lista[0])\nelse:\n    pass"}